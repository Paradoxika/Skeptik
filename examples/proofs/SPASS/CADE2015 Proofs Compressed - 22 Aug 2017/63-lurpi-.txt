1: { ⊢ (subpopulations first_movers efficient_producers skc3 skc2)} 	: Axiom()[]
2: { ⊢ (environment skc3)} 	: Axiom()[]
3: {(subpopulations first_movers efficient_producers U V), (environment U) ⊢ (in_environment U V)} 	: Axiom()[]
4: {(subpopulations first_movers efficient_producers skc3 V) ⊢ (in_environment skc3 V)} 	: UnifyingResolution(2, 3)[]
5: { ⊢ (in_environment skc3 skc2)} 	: UnifyingResolution(1, 4)[]
6: { ⊢ (outcompetes first_movers efficient_producers skc2)} 	: Axiom()[]
7: {(subpopulations V W U X), (environment U) ⊢ (greater_or_equal (growth_rate V X) zero), (greater zero (growth_rate V X))} 	: Axiom()[]
8: {(subpopulations V W skc3 X) ⊢ (greater_or_equal (growth_rate V X) zero), (greater zero (growth_rate V X))} 	: UnifyingResolution(2, 7)[]
9: { ⊢ (greater_or_equal (growth_rate first_movers skc2) zero), (greater zero (growth_rate first_movers skc2))} 	: UnifyingResolution(1, 8)[]
10: {(greater zero (growth_rate U V)) ⊢ (subpopulations U W X V)} 	: Axiom()[]
11: { ⊢ (greater_or_equal (growth_rate first_movers skc2) zero), (subpopulations first_movers W X skc2)} 	: UnifyingResolution(9, 10)[]
12: {(subpopulations V W U X), (environment U) ⊢ (subpopulations W V U X)} 	: Axiom()[]
13: {(subpopulations V W skc3 X) ⊢ (subpopulations W V skc3 X)} 	: UnifyingResolution(2, 12)[]
14: { ⊢ (greater_or_equal (growth_rate first_movers skc2) zero), (subpopulations W first_movers skc3 skc2)} 	: UnifyingResolution(11, 13)[]
15: {(subpopulations W V U X), (outcompetes V W X), (environment U) ⊢ (greater_or_equal (growth_rate V X) zero)} 	: Axiom()[]
16: {(subpopulations W V skc3 X), (outcompetes V W X) ⊢ (greater_or_equal (growth_rate V X) zero)} 	: UnifyingResolution(2, 15)[]
17: {(outcompetes first_movers W skc2) ⊢ (greater_or_equal (growth_rate first_movers skc2) zero), (greater_or_equal (growth_rate first_movers skc2) zero)} 	: UnifyingResolution(14, 16)[]
18: {(outcompetes first_movers U skc2) ⊢ (greater_or_equal (growth_rate first_movers skc2) zero)} 	: Contraction(17)[]
19: { ⊢ (greater (resilience efficient_producers) (resilience first_movers))} 	: Axiom()[]
20: { ⊢ (subpopulations efficient_producers first_movers skc3 skc2)} 	: UnifyingResolution(1, 13)[]
21: { ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater zero (growth_rate efficient_producers skc2))} 	: UnifyingResolution(20, 8)[]
22: {(greater (resilience W) (resilience X)), (greater zero (growth_rate W V)), (in_environment U V), (environment U) ⊢ (greater zero (growth_rate X V))} 	: Axiom()[]
23: {(greater (resilience W) (resilience X)), (greater zero (growth_rate W V)), (in_environment skc3 V) ⊢ (greater zero (growth_rate X V))} 	: UnifyingResolution(2, 22)[]
24: {(greater (resilience efficient_producers) (resilience X)), (in_environment skc3 skc2) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater zero (growth_rate X skc2))} 	: UnifyingResolution(21, 23)[]
25: {(in_environment skc3 skc2) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater zero (growth_rate first_movers skc2))} 	: UnifyingResolution(19, 24)[]
26: {(greater_or_equal (growth_rate U V) zero), (greater zero (growth_rate U V)) ⊢ } 	: Axiom()[]
27: {(in_environment skc3 skc2), (greater_or_equal (growth_rate first_movers skc2) zero) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero)} 	: UnifyingResolution(25, 26)[]
28: {(outcompetes first_movers U skc2), (in_environment skc3 skc2) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero)} 	: UnifyingResolution(18, 27)[]
29: {(subpopulations W V U X), (outcompetes V W X), (environment U) ⊢ (greater zero (growth_rate W X))} 	: Axiom()[]
30: {(subpopulations W V skc3 X), (outcompetes V W X) ⊢ (greater zero (growth_rate W X))} 	: UnifyingResolution(2, 29)[]
31: {(outcompetes first_movers efficient_producers skc2) ⊢ (greater zero (growth_rate efficient_producers skc2))} 	: UnifyingResolution(20, 30)[]
32: {(outcompetes first_movers efficient_producers skc2), (greater_or_equal (growth_rate efficient_producers skc2) zero) ⊢ } 	: UnifyingResolution(31, 26)[]
33: {(outcompetes first_movers U skc2), (in_environment skc3 skc2), (outcompetes first_movers efficient_producers skc2) ⊢ } 	: UnifyingResolution(28, 32)[]
34: {(outcompetes first_movers efficient_producers skc2), (in_environment skc3 skc2) ⊢ } 	: Contraction(33)[]
35: {(in_environment skc3 skc2) ⊢ } 	: UnifyingResolution(6, 34)[]
36: { ⊢ } 	: UnifyingResolution(5, 35)[]

