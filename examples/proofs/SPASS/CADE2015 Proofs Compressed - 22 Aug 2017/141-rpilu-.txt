1: { ⊢ (subpopulations first_movers efficient_producers skc3 skc2)} 	: Axiom()[]
2: { ⊢ (environment skc3)} 	: Axiom()[]
3: { ⊢ (outcompetes first_movers efficient_producers skc2)} 	: Axiom()[]
4: {(subpopulations first_movers efficient_producers U V), (environment U) ⊢ (in_environment U V)} 	: Axiom()[]
5: {(subpopulations first_movers efficient_producers U skc2), (environment U) ⊢ (in_environment U skc2)} 	: FOSubstitution(4)[]
6: {(subpopulations first_movers efficient_producers U V), (environment U) ⊢ (subpopulations efficient_producers first_movers U V)} 	: Axiom()[]
7: {(subpopulations first_movers efficient_producers U skc2), (environment U) ⊢ (subpopulations efficient_producers first_movers U skc2)} 	: FOSubstitution(6)[]
8: {(subpopulations V W U X), (environment U) ⊢ (greater_or_equal (growth_rate V X) zero), (greater zero (growth_rate V X))} 	: Axiom()[]
9: {(subpopulations V W skc3 X), (environment skc3) ⊢ (greater_or_equal (growth_rate V X) zero), (greater zero (growth_rate V X))} 	: FOSubstitution(8)[]
10: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (environment skc3) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater zero (growth_rate efficient_producers skc2))} 	: UnifyingResolutionMRR(7, 9)[]
11: {(greater zero (growth_rate U V)) ⊢ (subpopulations U W X V)} 	: Axiom()[]
12: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (environment skc3) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (subpopulations efficient_producers W X skc2)} 	: UnifyingResolutionMRR(10, 11)[]
13: {(subpopulations W V U X), (outcompetes V W X), (environment U) ⊢ (greater_or_equal (growth_rate V X) zero)} 	: Axiom()[]
14: {(subpopulations W V skc3 X), (outcompetes V W X), (environment skc3) ⊢ (greater_or_equal (growth_rate V X) zero)} 	: FOSubstitution(13)[]
15: {(environment skc3), (environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (outcompetes V efficient_producers skc2), (environment skc3) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater_or_equal (growth_rate V skc2) zero)} 	: UnifyingResolutionMRR(12, 14)[]
16: {(environment skc3), (environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (outcompetes first_movers efficient_producers skc2), (environment skc3) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater_or_equal (growth_rate first_movers skc2) zero)} 	: FOSubstitution(15)[]
17: { ⊢ (greater (resilience efficient_producers) (resilience first_movers))} 	: Axiom()[]
18: {(greater (resilience W) (resilience X)), (greater zero (growth_rate W V)), (in_environment U V), (environment U) ⊢ (greater zero (growth_rate X V))} 	: Axiom()[]
19: {(greater (resilience W) (resilience X)), (greater zero (growth_rate W V)), (in_environment skc3 V), (environment skc3) ⊢ (greater zero (growth_rate X V))} 	: FOSubstitution(18)[]
20: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (environment skc3), (greater (resilience efficient_producers) (resilience X)), (in_environment skc3 skc2), (environment skc3) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater zero (growth_rate X skc2))} 	: UnifyingResolutionMRR(10, 19)[]
21: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (environment skc3), (in_environment skc3 skc2), (environment skc3) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater zero (growth_rate first_movers skc2))} 	: UnifyingResolutionMRR(17, 20)[]
22: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (in_environment skc3 skc2) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater zero (growth_rate first_movers skc2))} 	: Contraction(21)[]
23: {(greater_or_equal (growth_rate U V) zero), (greater zero (growth_rate U V)) ⊢ } 	: Axiom()[]
24: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (in_environment skc3 skc2), (greater_or_equal (growth_rate first_movers skc2) zero) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero)} 	: UnifyingResolutionMRR(22, 23)[]
25: {(environment skc3), (environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (outcompetes first_movers efficient_producers skc2), (environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (in_environment skc3 skc2) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero), (greater_or_equal (growth_rate efficient_producers skc2) zero)} 	: UnifyingResolutionMRR(16, 24)[]
26: {(environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (outcompetes first_movers efficient_producers skc2), (in_environment skc3 skc2) ⊢ (greater_or_equal (growth_rate efficient_producers skc2) zero)} 	: Contraction(25)[]
27: {(subpopulations first_movers efficient_producers U skc2), (environment U) ⊢ (subpopulations efficient_producers first_movers U skc2)} 	: FOSubstitution(6)[]
28: {(subpopulations W V U X), (outcompetes V W X), (environment U) ⊢ (greater zero (growth_rate W X))} 	: Axiom()[]
29: {(subpopulations W V skc3 X), (outcompetes V W X), (environment skc3) ⊢ (greater zero (growth_rate W X))} 	: FOSubstitution(28)[]
30: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (outcompetes first_movers efficient_producers skc2), (environment skc3) ⊢ (greater zero (growth_rate efficient_producers skc2))} 	: UnifyingResolutionMRR(27, 29)[]
31: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (outcompetes first_movers efficient_producers skc2), (environment skc3), (greater_or_equal (growth_rate efficient_producers skc2) zero) ⊢ } 	: UnifyingResolutionMRR(30, 23)[]
32: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (outcompetes first_movers efficient_producers skc2), (greater_or_equal (growth_rate efficient_producers skc2) zero) ⊢ } 	: Contraction(31)[]
33: {(environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (outcompetes first_movers efficient_producers skc2), (in_environment skc3 skc2), (subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (outcompetes first_movers efficient_producers skc2) ⊢ } 	: UnifyingResolutionMRR(26, 32)[]
34: {(environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (outcompetes first_movers efficient_producers skc2), (in_environment skc3 skc2) ⊢ } 	: Contraction(33)[]
35: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (environment skc3), (subpopulations first_movers efficient_producers skc3 skc2), (outcompetes first_movers efficient_producers skc2) ⊢ } 	: UnifyingResolutionMRR(5, 34)[]
36: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3), (outcompetes first_movers efficient_producers skc2) ⊢ } 	: Contraction(35)[]
37: {(subpopulations first_movers efficient_producers skc3 skc2), (environment skc3) ⊢ } 	: UnifyingResolution(3, 36)[]
38: {(subpopulations first_movers efficient_producers skc3 skc2) ⊢ } 	: UnifyingResolution(2, 37)[]
39: { ⊢ } 	: UnifyingResolution(1, 38)[]

